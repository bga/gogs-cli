#!/bin/bash


# config ----------

token_filename=gogs-api-token.txt
server="https://try.gogs.io" # replaced by environment variable GOGS_SERVER_URL if set


# utils ----------

if [ -n "$GOGS_SERVER_URL" ]; then
	server="$GOGS_SERVER_URL"
fi

debug=0
while [ -n "$1" ] && [[ "$1" == "-"* ]] && [ "$1" != "--" ]; do
	case "$1" in
		-d) debug=1; echo DRY RUN: doing nothing ;;
	esac
	shift
done

function get-gogs-api-token {
	if [ -f "$token_filename" ]; then
		gogs_token=$(cat "$token_filename")
	elif [ -f "$token_filename.gpg" ]; then
		gogs_token=$(gpg -q -d "$token_filename.gpg")
	else
		echo No Gogs API token found \($token_filename\[.gpg\]\).
		echo Your can create one here: $server/user/settings/applications
		read -sp "Token: " gogs_token
	fi
}

function gogs-curl {
	method=$1
	cmd=$2
	data="$3"
	auth="?token=$gogs_token"
	address=$server"/api/v1"$cmd$auth

	if [ $debug -eq 1 ]; then
		echo $method
		echo -e "\tcommand: $cmd"
		echo -e "\taddress: $address"
		echo -e "\tdata:    $data"
	else
		echo
		sleep 1s
		if [ -n "$data" ]; then
			curl -d "$data" -H "Content-Type: application/json" -X $method "$address" --insecure 2> /dev/null
		else
			curl -X $method "$address" --insecure 2> /dev/null
		fi
	fi
}


# cmd interface ----------

function print-help {
	echo \*\* Gogs command line util \*\*
}

if [ $# -gt 0 ]; then
	action=$1
	shift
	case $action in
		--help) print-help ;;
		--) action=$1; shift; get-gogs-api-token; $action "$@" ;;
		*) echo Unrecognized action: \"$action\" ;;
	esac
else
	print-help
fi
